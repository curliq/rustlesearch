/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package dev.rustlesearch.main

import akka.actor.ActorSystem
import akka.stream.ActorMaterializer
import dev.rustlesearch.config.config
import dev.rustlesearch.pipelines.Flows
import dev.rustlesearch.pipelines.Sinks.ElasticMessageSink
import dev.rustlesearch.pipelines.Sources
import org.apache.http.HttpHost
import org.elasticsearch.client.RestClient
import org.elasticsearch.client.RestHighLevelClient
import java.nio.file.Paths

fun main(args: Array<String>) {

    val client = RestHighLevelClient(
        RestClient.builder(HttpHost(config.elastic.host.v, config.elastic.port.v))
    )
    val system = ActorSystem.create()
    val materializer = ActorMaterializer.create(system)
    val source = Sources.orlSource(config.paths.orl.toString())
    val sink = ElasticMessageSink(client)
    val runnable = source
        .map { Paths.get(it) }
        .via(Flows.filesToLines)
        .via(Flows.lineToMessage)

    runnable.runWith(sink, materializer)
}
