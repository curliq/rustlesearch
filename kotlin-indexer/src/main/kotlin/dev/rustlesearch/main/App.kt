/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package dev.rustlesearch.main

import akka.actor.ActorSystem
import akka.stream.ActorMaterializer
import akka.stream.javadsl.FileIO
import akka.stream.javadsl.Source
import akka.util.ByteString
import dev.rustlesearch.pipelines.Flows
import java.io.File
import java.nio.file.Paths

fun main(args: Array<String>) {

    // val client = RestClient.builder(HttpHost("localhost", 9201)).build()
    val system = ActorSystem.create()
    val materializer = ActorMaterializer.create(system)
//    println(File("/home/johnpyp/orl-bak/orl").listFiles()?.map { it.absolutePath })
    val source = Source.from(
        File("/home/johnpyp/orl-bak/orl").listFiles()?.map { it.absolutePath } ?: emptyList())
    //    val sink = Sink.foreach<Message> { println(it) }
    val sink = FileIO.toPath(Paths.get("./data/parsed.txt"))
    val runnable = source
        .map { Paths.get(it) }
        .via(Flows.filesToLines)
        .via(Flows.lineToMessage)
        .map { ByteString.fromString(it.toString() + "\n") }

    runnable.runWith(sink, materializer).whenComplete { _, _ -> println("Done") }
}
